{"ast":null,"code":"var _jsxFileName = \"/Users/pavel/Documents/GitHub/test-task-avito/src/pages/GamePage/index.tsx\",\n  _s = $RefreshSig$();\nimport styles from \"./GamePage.module.scss\";\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { getOneGame, setGameLoadingStatus } from \"../../redux/slices/gamesSlice\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { FullGameLeft } from \"../../components/FullGameLeft\";\nimport { FullGameRight } from \"../../components/FullGameRight\";\nimport { Button, Icon, Loader } from \"cutie-ui\";\nimport { Status } from \"../../redux/types/types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GamePage = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const data = useAppSelector(state => state.games.currentGameData);\n  const {\n    id\n  } = useParams();\n  const handleClickBack = () => {\n    navigate(-1);\n  };\n  const [gameData, setGameData] = useState(undefined);\n  const loadingStatus = useAppSelector(state => state.games.gameLoadingStatus);\n\n  // ================ Реализация сохранения данных игры в Localstorage на 5 минут ===================\n  const currentTime = new Date().getTime();\n  const FIVE_MINUTES = 5 * 60 * 1000;\n  function isCardAvailable(gameId) {\n    const localStorageData = localStorage.getItem(`game_${gameId}`);\n    const storedTime = localStorageData ? JSON.parse(localStorageData).currentTime : null;\n    if (storedTime) {\n      const currentTime = new Date().getTime();\n      return currentTime - parseInt(storedTime) <= FIVE_MINUTES;\n    }\n    return false;\n  }\n  function addCardToLS(data) {\n    localStorage.removeItem(`game_${data === null || data === void 0 ? void 0 : data.id}`);\n    if (data) {\n      localStorage.setItem(`game_${data.id}`, JSON.stringify({\n        data,\n        currentTime\n      }));\n    }\n  }\n  const isWasError = useRef(false);\n  useEffect(() => {\n    if (id && !isWasError) {\n      const cardAvailable = isCardAvailable(id);\n      if (cardAvailable) {\n        // @ts-ignore\n        const localStorageData = JSON.parse(localStorage.getItem(`game_${id}`));\n        setGameData(localStorageData.data);\n        dispatch(setGameLoadingStatus(Status.SUCCESS));\n      } else {\n        const _id = +id;\n        dispatch(getOneGame({\n          id: _id\n        }));\n        if (loadingStatus === \"success\") {\n          addCardToLS(data);\n          setGameData(data);\n        } else if (loadingStatus == \"error\") {\n          isWasError.current = true;\n        }\n      }\n    }\n    return () => {\n      dispatch(setGameLoadingStatus(Status.LOADING));\n    };\n  }, [loadingStatus]);\n  // ==================================================================================================\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loadingStatus == \"loading\" ? /*#__PURE__*/_jsxDEV(Loader, {\n      className: styles.loader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : loadingStatus == \"error\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.error,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u0433\\u0440\\u0443 \\uD83D\\uDE22\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"var(--textPrimary)\",\n        onClick: handleClickBack,\n        variant: \"text2\",\n        className: styles.buttonBack,\n        size: \"large\",\n        startIcon: /*#__PURE__*/_jsxDEV(Icon, {\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            strokeWidth: 1.5,\n            stroke: \"currentColor\",\n            className: \"w-6 h-6\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              d: \"M15.75 19.5L8.25 12l7.5-7.5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this),\n        children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : loadingStatus == \"success\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.root,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.gamepage,\n          children: [/*#__PURE__*/_jsxDEV(FullGameLeft, {\n            data: gameData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FullGameRight, {\n            data: gameData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this) : \"\"\n  }, void 0, false);\n};\n_s(GamePage, \"cMP72x/uVY1dum6qPOanFdq1RFU=\", false, function () {\n  return [useNavigate, useAppDispatch, useAppSelector, useParams, useAppSelector];\n});\n_c = GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["styles","useAppDispatch","useAppSelector","useEffect","useRef","useState","getOneGame","setGameLoadingStatus","useNavigate","useParams","FullGameLeft","FullGameRight","Button","Icon","Loader","Status","jsxDEV","_jsxDEV","Fragment","_Fragment","GamePage","_s","navigate","dispatch","data","state","games","currentGameData","id","handleClickBack","gameData","setGameData","undefined","loadingStatus","gameLoadingStatus","currentTime","Date","getTime","FIVE_MINUTES","isCardAvailable","gameId","localStorageData","localStorage","getItem","storedTime","JSON","parse","parseInt","addCardToLS","removeItem","setItem","stringify","isWasError","cardAvailable","SUCCESS","_id","current","LOADING","children","className","loader","fileName","_jsxFileName","lineNumber","columnNumber","error","color","onClick","variant","buttonBack","size","startIcon","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","root","gamepage","_c","$RefreshReg$"],"sources":["/Users/pavel/Documents/GitHub/test-task-avito/src/pages/GamePage/index.tsx"],"sourcesContent":["import styles from \"./GamePage.module.scss\";\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\nimport { useEffect, useRef, useState } from \"react\";\nimport {\n  getOneGame,\n  setGameLoadingStatus,\n} from \"../../redux/slices/gamesSlice\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { FullGameLeft } from \"../../components/FullGameLeft\";\nimport { FullGameRight } from \"../../components/FullGameRight\";\nimport { Button, Icon, Loader } from \"cutie-ui\";\nimport { Game, Status } from \"../../redux/types/types\";\n\nexport const GamePage = () => {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const data = useAppSelector((state) => state.games.currentGameData);\n  const { id } = useParams();\n\n  const handleClickBack = () => {\n    navigate(-1);\n  };\n\n  const [gameData, setGameData] = useState<Game | undefined>(undefined);\n  const loadingStatus = useAppSelector(\n    (state) => state.games.gameLoadingStatus\n  );\n\n  // ================ Реализация сохранения данных игры в Localstorage на 5 минут ===================\n  const currentTime: number = new Date().getTime();\n  const FIVE_MINUTES: number = 5 * 60 * 1000;\n\n  function isCardAvailable(gameId: string) {\n    const localStorageData: string | null = localStorage.getItem(\n      `game_${gameId}`\n    );\n    const storedTime = localStorageData\n      ? JSON.parse(localStorageData).currentTime\n      : null;\n    if (storedTime) {\n      const currentTime: number = new Date().getTime();\n      return currentTime - parseInt(storedTime) <= FIVE_MINUTES;\n    }\n    return false;\n  }\n\n  function addCardToLS(data?: Game) {\n    localStorage.removeItem(`game_${data?.id}`);\n    if (data) {\n      localStorage.setItem(\n        `game_${data.id}`,\n        JSON.stringify({ data, currentTime })\n      );\n    }\n  }\n  const isWasError = useRef<boolean>(false);\n  useEffect(() => {\n    if (id && !isWasError) {\n      const cardAvailable = isCardAvailable(id);\n      if (cardAvailable) {\n        // @ts-ignore\n        const localStorageData = JSON.parse(localStorage.getItem(`game_${id}`));\n        setGameData(localStorageData.data);\n        dispatch(setGameLoadingStatus(Status.SUCCESS));\n      } else {\n        const _id = +id;\n        dispatch(getOneGame({ id: _id }));\n        if (loadingStatus === \"success\") {\n          addCardToLS(data);\n          setGameData(data);\n        } else if (loadingStatus == \"error\") {\n          isWasError.current = true;\n        }\n      }\n    }\n\n    return () => {\n      dispatch(setGameLoadingStatus(Status.LOADING));\n    };\n  }, [loadingStatus]);\n  // ==================================================================================================\n\n  return (\n    <>\n      {loadingStatus == \"loading\" ? (\n        <Loader className={styles.loader} />\n      ) : loadingStatus == \"error\" ? (\n        <div className={styles.error}>\n          <p>Не удалось загрузить игру 😢</p>\n\n          <Button\n            color=\"var(--textPrimary)\"\n            onClick={handleClickBack}\n            variant=\"text2\"\n            className={styles.buttonBack}\n            size=\"large\"\n            startIcon={\n              <Icon>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  strokeWidth={1.5}\n                  stroke=\"currentColor\"\n                  className=\"w-6 h-6\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M15.75 19.5L8.25 12l7.5-7.5\"\n                  />\n                </svg>\n              </Icon>\n            }\n          >\n            Назад\n          </Button>\n        </div>\n      ) : loadingStatus == \"success\" ? (\n        <div className={styles.root}>\n          <div className=\"container\">\n            <div className={styles.gamepage}>\n              <FullGameLeft data={gameData} />\n              <FullGameRight data={gameData} />\n            </div>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}