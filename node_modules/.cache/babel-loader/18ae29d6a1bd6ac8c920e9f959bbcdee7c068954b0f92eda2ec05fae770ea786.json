{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { Status } from \"../types/types\";\nexport const getData = createAsyncThunk(\"games/getGames\", async params => {\n  const {\n    sortBy,\n    platform,\n    genre\n  } = params;\n  const {\n    data\n  } = await axios.get(`https://www.freetogame.com/api/games?platform=${platform}&${genre && `category=${genre}&`}sort-by=${sortBy}`);\n  return data;\n});\nexport const getOneGame = createAsyncThunk(\"games/getOneGame\", async params => {\n  const {\n    id\n  } = params;\n  const {\n    data\n  } = await axios.get(`https://www.freetogame.coms/api/game?id=${id}`);\n  return data;\n});\nconst initialState = {\n  data: [],\n  currentGameData: undefined,\n  loadingStatus: Status.LOADING,\n  gameLoadingStatus: Status.LOADING,\n  platform: \"all\",\n  genre: \"shooter\",\n  sortBy: \"relevance\"\n};\nconst gamesSlice = createSlice({\n  name: \"games\",\n  initialState,\n  reducers: {\n    setLoadingStatus(state, action) {\n      state.loadingStatus = action.payload;\n    },\n    setGameLoadingStatus(state, action) {\n      state.gameLoadingStatus = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    // getdata\n    builder.addCase(getData.pending, state => {\n      state.loadingStatus = Status.LOADING;\n      state.data = [];\n    });\n    builder.addCase(getData.fulfilled, (state, action) => {\n      state.loadingStatus = Status.SUCCESS;\n      state.data = action.payload;\n    });\n    builder.addCase(getData.rejected, state => {\n      state.loadingStatus = Status.ERROR;\n      state.data = [];\n    });\n    // getone\n    builder.addCase(getOneGame.pending, state => {\n      state.gameLoadingStatus = Status.LOADING;\n      state.currentGameData = undefined;\n    });\n    builder.addCase(getOneGame.fulfilled, (state, action) => {\n      state.gameLoadingStatus = Status.SUCCESS;\n      state.currentGameData = action.payload;\n    });\n    builder.addCase(getOneGame.rejected, state => {\n      state.gameLoadingStatus = Status.ERROR;\n      state.currentGameData = undefined;\n    });\n  }\n});\nexport const {\n  setLoadingStatus,\n  setGameLoadingStatus\n} = gamesSlice.actions;\nexport default gamesSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","Status","getData","params","sortBy","platform","genre","data","get","getOneGame","id","initialState","currentGameData","undefined","loadingStatus","LOADING","gameLoadingStatus","gamesSlice","name","reducers","setLoadingStatus","state","action","payload","setGameLoadingStatus","extraReducers","builder","addCase","pending","fulfilled","SUCCESS","rejected","ERROR","actions","reducer"],"sources":["/Users/pavel/Documents/GitHub/test-task-avito/src/redux/slices/gamesSlice.ts"],"sourcesContent":["import { PayloadAction, createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport {\n  Game,\n  GamesParams,\n  GamesState,\n  GetOneParams,\n  Status,\n} from \"../types/types\";\n\nexport const getData = createAsyncThunk<Game[], GamesParams>(\n  \"games/getGames\",\n  async (params) => {\n    const { sortBy, platform, genre } = params;\n    const { data } = await axios.get(\n      `https://www.freetogame.com/api/games?platform=${platform}&${\n        genre && `category=${genre}&`\n      }sort-by=${sortBy}`\n    );\n    return data;\n  }\n);\n\nexport const getOneGame = createAsyncThunk<Game[], GetOneParams>(\n  \"games/getOneGame\",\n  async (params) => {\n    const { id } = params;\n    const { data } = await axios.get(\n      `https://www.freetogame.coms/api/game?id=${id}`\n    );\n    return data;\n  }\n);\n\nconst initialState: GamesState = {\n  data: [],\n  currentGameData: undefined,\n  loadingStatus: Status.LOADING,\n  gameLoadingStatus: Status.LOADING,\n  platform: \"all\",\n  genre: \"shooter\",\n  sortBy: \"relevance\",\n};\n\nconst gamesSlice = createSlice({\n  name: \"games\",\n  initialState,\n  reducers: {\n    setLoadingStatus(state, action: PayloadAction<Status>) {\n      state.loadingStatus = action.payload;\n    },\n    setGameLoadingStatus(state, action: PayloadAction<Status>) {\n      state.gameLoadingStatus = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    // getdata\n    builder.addCase(getData.pending, (state) => {\n      state.loadingStatus = Status.LOADING;\n      state.data = [];\n    });\n    builder.addCase(getData.fulfilled, (state, action) => {\n      state.loadingStatus = Status.SUCCESS;\n      state.data = action.payload;\n    });\n    builder.addCase(getData.rejected, (state) => {\n      state.loadingStatus = Status.ERROR;\n      state.data = [];\n    });\n    // getone\n    builder.addCase(getOneGame.pending, (state) => {\n      state.gameLoadingStatus = Status.LOADING;\n      state.currentGameData = undefined;\n    });\n    builder.addCase(getOneGame.fulfilled, (state, action) => {\n      state.gameLoadingStatus = Status.SUCCESS;\n      state.currentGameData = action.payload as unknown as Game;\n    });\n    builder.addCase(getOneGame.rejected, (state) => {\n      state.gameLoadingStatus = Status.ERROR;\n      state.currentGameData = undefined;\n    });\n  },\n});\n\nexport const { setLoadingStatus, setGameLoadingStatus } = gamesSlice.actions;\n\nexport default gamesSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}