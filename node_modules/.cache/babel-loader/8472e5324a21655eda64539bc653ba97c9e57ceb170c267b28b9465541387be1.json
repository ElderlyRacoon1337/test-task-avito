{"ast":null,"code":"var _jsxFileName = \"/Users/pavel/Documents/GitHub/test-task-avito/src/pages/GamePage/index.tsx\",\n  _s = $RefreshSig$();\nimport styles from \"./GamePage.module.scss\";\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\nimport { useEffect, useState } from \"react\";\nimport { getOneGame, setGameLoadingStatus } from \"../../redux/slices/gamesSlice\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { FullGameLeft } from \"../../components/FullGameLeft\";\nimport { FullGameRight } from \"../../components/FullGameRight\";\nimport { Button, Icon, Loader } from \"cutie-ui\";\nimport { Status } from \"../../redux/types/types\";\nimport { isCardAvailable } from \"../../utils/isCardAvailable\";\nimport { addCardToLS } from \"../../utils/addCardToLS\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GamePage = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const data = useAppSelector(state => state.games.currentGameData);\n  const {\n    id\n  } = useParams();\n  const handleClickBack = () => {\n    navigate(-1);\n  };\n  const [gameData, setGameData] = useState(undefined);\n  const loadingStatus = useAppSelector(state => state.games.gameLoadingStatus);\n  const myPromise = new Promise((resolve, reject) => {\n    resolve();\n  });\n  useEffect(() => {\n    if (id) {\n      const cardAvailable = isCardAvailable(id);\n      if (cardAvailable) {\n        // @ts-ignore\n        const localStorageData = JSON.parse(localStorage.getItem(`game_${id}`));\n        setGameData(localStorageData.data);\n        dispatch(setGameLoadingStatus(Status.SUCCESS));\n      } else {\n        const _id = +id;\n        dispatch(getOneGame({\n          id: _id\n        }));\n        addCardToLS(data);\n        setGameData(data);\n      }\n    }\n    return () => {\n      dispatch(setGameLoadingStatus(Status.LOADING));\n    };\n  }, [localStorage.getItem(`game_${id}`)]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loadingStatus == \"loading\" ? /*#__PURE__*/_jsxDEV(Loader, {\n      className: styles.loader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : loadingStatus == \"error\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.error,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u0433\\u0440\\u0443 \\uD83D\\uDE22\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"var(--textPrimary)\",\n        onClick: handleClickBack,\n        variant: \"text2\",\n        className: styles.buttonBack,\n        size: \"large\",\n        startIcon: /*#__PURE__*/_jsxDEV(Icon, {\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            strokeWidth: 1.5,\n            stroke: \"currentColor\",\n            className: \"w-6 h-6\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              d: \"M15.75 19.5L8.25 12l7.5-7.5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this),\n        children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : loadingStatus == \"success\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.root,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.gamepage,\n          children: [/*#__PURE__*/_jsxDEV(FullGameLeft, {\n            data: gameData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FullGameRight, {\n            data: gameData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : \"\"\n  }, void 0, false);\n};\n_s(GamePage, \"igc+yDKYb/jvq+kjZ6nK0KnvjwI=\", false, function () {\n  return [useNavigate, useAppDispatch, useAppSelector, useParams, useAppSelector];\n});\n_c = GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["styles","useAppDispatch","useAppSelector","useEffect","useState","getOneGame","setGameLoadingStatus","useNavigate","useParams","FullGameLeft","FullGameRight","Button","Icon","Loader","Status","isCardAvailable","addCardToLS","jsxDEV","_jsxDEV","Fragment","_Fragment","GamePage","_s","navigate","dispatch","data","state","games","currentGameData","id","handleClickBack","gameData","setGameData","undefined","loadingStatus","gameLoadingStatus","myPromise","Promise","resolve","reject","cardAvailable","localStorageData","JSON","parse","localStorage","getItem","SUCCESS","_id","LOADING","children","className","loader","fileName","_jsxFileName","lineNumber","columnNumber","error","color","onClick","variant","buttonBack","size","startIcon","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","root","gamepage","_c","$RefreshReg$"],"sources":["/Users/pavel/Documents/GitHub/test-task-avito/src/pages/GamePage/index.tsx"],"sourcesContent":["import styles from \"./GamePage.module.scss\";\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\nimport { useEffect, useState } from \"react\";\nimport {\n  getOneGame,\n  setGameLoadingStatus,\n} from \"../../redux/slices/gamesSlice\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { FullGameLeft } from \"../../components/FullGameLeft\";\nimport { FullGameRight } from \"../../components/FullGameRight\";\nimport { Button, Icon, Loader } from \"cutie-ui\";\nimport { Game, Status } from \"../../redux/types/types\";\nimport { isCardAvailable } from \"../../utils/isCardAvailable\";\nimport { addCardToLS } from \"../../utils/addCardToLS\";\n\nexport const GamePage = () => {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const data = useAppSelector((state) => state.games.currentGameData);\n  const { id } = useParams();\n\n  const handleClickBack = () => {\n    navigate(-1);\n  };\n\n  const [gameData, setGameData] = useState<Game | undefined>(undefined);\n  const loadingStatus = useAppSelector(\n    (state) => state.games.gameLoadingStatus\n  );\n\n  const myPromise = new Promise((resolve, reject) => {\n    resolve();\n  });\n\n  useEffect(() => {\n    if (id) {\n      const cardAvailable = isCardAvailable(id);\n      if (cardAvailable) {\n        // @ts-ignore\n        const localStorageData = JSON.parse(localStorage.getItem(`game_${id}`));\n        setGameData(localStorageData.data);\n        dispatch(setGameLoadingStatus(Status.SUCCESS));\n      } else {\n        const _id = +id;\n        dispatch(getOneGame({ id: _id }));\n        addCardToLS(data);\n        setGameData(data);\n      }\n    }\n\n    return () => {\n      dispatch(setGameLoadingStatus(Status.LOADING));\n    };\n  }, [localStorage.getItem(`game_${id}`)]);\n\n  return (\n    <>\n      {loadingStatus == \"loading\" ? (\n        <Loader className={styles.loader} />\n      ) : loadingStatus == \"error\" ? (\n        <div className={styles.error}>\n          <p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–≥—Ä—É üò¢</p>\n\n          <Button\n            color=\"var(--textPrimary)\"\n            onClick={handleClickBack}\n            variant=\"text2\"\n            className={styles.buttonBack}\n            size=\"large\"\n            startIcon={\n              <Icon>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  strokeWidth={1.5}\n                  stroke=\"currentColor\"\n                  className=\"w-6 h-6\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M15.75 19.5L8.25 12l7.5-7.5\"\n                  />\n                </svg>\n              </Icon>\n            }\n          >\n            –ù–∞–∑–∞–¥\n          </Button>\n        </div>\n      ) : loadingStatus == \"success\" ? (\n        <div className={styles.root}>\n          <div className=\"container\">\n            <div className={styles.gamepage}>\n              <FullGameLeft data={gameData} />\n              <FullGameRight data={gameData} />\n            </div>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}