{"ast":null,"code":"var _jsxFileName = \"/Users/pavel/Desktop/test-task/src/pages/MainPage/index.tsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { Filters } from \"../../components/FIlters\";\nimport { ThemeContext } from \"cutie-ui\";\nimport { Items } from \"../../components/Items\";\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\nimport { setCurrentPage, setGamesData } from \"../../redux/slices/pagesSlice\";\nimport { Status, getData, setLoadingStatus } from \"../../redux/slices/gamesSlice\";\nimport { Pagination } from \"../../components/Pagination\";\nimport { createPages } from \"../../utils/createPages\";\nimport { toEngGenre } from \"../../utils/toEngGenre\";\nimport { toEngPlatform } from \"../../utils/toEngPlatform\";\nimport { toEngSortBy } from \"../../utils/toEngSortBy\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainPage = () => {\n  _s();\n  var _data$;\n  const dispatch = useAppDispatch();\n  const data = useAppSelector(state => state.games.data);\n\n  // ========================== Theme change =============================\n  // const [theme, setTheme] = useState<\"dark\" | \"light\" | \"system\">(\"system\");\n  const theme = \"system\";\n  const {\n    changeTheme\n  } = useContext(ThemeContext);\n  useEffect(() => {\n    changeTheme(theme);\n  }, [theme]);\n  // =================================================================\n\n  const [platform, setPlatform] = useState(\"Все платформы\");\n  const [genre, setGenre] = useState(\"Все\");\n  const [sortBy, setSortBy] = useState(\"Релевантности\");\n  useEffect(() => {\n    const enSortBy = toEngSortBy(sortBy);\n    const enPlatform = toEngPlatform(platform);\n    const enGenre = toEngGenre(genre);\n    dispatch(getData({\n      sortBy: enSortBy,\n      genre: enGenre,\n      platform: enPlatform\n    }));\n    dispatch(setGamesData(data));\n    dispatch(setCurrentPage(1));\n    return () => {\n      dispatch(setLoadingStatus(Status.LOADING));\n    };\n  }, [platform, genre, sortBy]);\n\n  // ========================== Pagination =============================\n  const {\n    currentPage,\n    perPage\n  } = useAppSelector(state => state.pages);\n  const totalCount = data.length;\n  const pagesCount = Math.ceil(totalCount / perPage);\n  const startIndex = (currentPage - 1) * perPage;\n  const endIndex = startIndex + perPage;\n  const currentGames = data.slice(startIndex, endIndex);\n  const pages = [];\n  createPages(pages, pagesCount, currentPage);\n  // =================================================================\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Filters, {\n      platform: platform,\n      setPlatform: setPlatform,\n      genre: genre,\n      setGenre: setGenre,\n      sortBy: sortBy,\n      setSortBy: setSortBy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Items, {\n      currentGames: currentGames\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), (_data$ = data[0]) !== null && _data$ !== void 0 && _data$.title ? /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      pages: pages,\n      pagesCount: pagesCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"SYKE45C4m6slxBDR9Kpg1NBleB0=\", false, function () {\n  return [useAppDispatch, useAppSelector, useAppSelector];\n});\n_c = MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["useContext","useEffect","useState","Filters","ThemeContext","Items","useAppDispatch","useAppSelector","setCurrentPage","setGamesData","Status","getData","setLoadingStatus","Pagination","createPages","toEngGenre","toEngPlatform","toEngSortBy","jsxDEV","_jsxDEV","MainPage","_s","_data$","dispatch","data","state","games","theme","changeTheme","platform","setPlatform","genre","setGenre","sortBy","setSortBy","enSortBy","enPlatform","enGenre","LOADING","currentPage","perPage","pages","totalCount","length","pagesCount","Math","ceil","startIndex","endIndex","currentGames","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["/Users/pavel/Desktop/test-task/src/pages/MainPage/index.tsx"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { Filters } from \"../../components/FIlters\";\nimport { ThemeContext } from \"cutie-ui\";\nimport { Items } from \"../../components/Items\";\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\nimport { setCurrentPage, setGamesData } from \"../../redux/slices/pagesSlice\";\nimport {\n  Status,\n  getData,\n  setLoadingStatus,\n} from \"../../redux/slices/gamesSlice\";\nimport { Pagination } from \"../../components/Pagination\";\nimport { createPages } from \"../../utils/createPages\";\nimport { toEngGenre } from \"../../utils/toEngGenre\";\nimport { toEngPlatform } from \"../../utils/toEngPlatform\";\nimport { toEngSortBy } from \"../../utils/toEngSortBy\";\n\nexport const MainPage = () => {\n  const dispatch = useAppDispatch();\n  const data = useAppSelector((state) => state.games.data);\n\n  // ========================== Theme change =============================\n  // const [theme, setTheme] = useState<\"dark\" | \"light\" | \"system\">(\"system\");\n  const theme = \"system\";\n  const { changeTheme } = useContext(ThemeContext);\n  useEffect(() => {\n    changeTheme(theme);\n  }, [theme]);\n  // =================================================================\n\n  const [platform, setPlatform] = useState(\"Все платформы\");\n\n  const [genre, setGenre] = useState(\"Все\");\n\n  const [sortBy, setSortBy] = useState(\"Релевантности\");\n\n  useEffect(() => {\n    const enSortBy = toEngSortBy(sortBy);\n    const enPlatform = toEngPlatform(platform);\n    const enGenre = toEngGenre(genre);\n\n    dispatch(\n      getData({ sortBy: enSortBy, genre: enGenre, platform: enPlatform })\n    );\n\n    dispatch(setGamesData(data));\n    dispatch(setCurrentPage(1));\n\n    return () => {\n      dispatch(setLoadingStatus(Status.LOADING));\n    };\n  }, [platform, genre, sortBy]);\n\n  // ========================== Pagination =============================\n  const { currentPage, perPage } = useAppSelector((state) => state.pages);\n  const totalCount = data.length;\n  const pagesCount = Math.ceil(totalCount / perPage);\n  const startIndex = (currentPage - 1) * perPage;\n  const endIndex = startIndex + perPage;\n  const currentGames = data.slice(startIndex, endIndex);\n\n  const pages: number[] = [];\n  createPages(pages, pagesCount, currentPage);\n  // =================================================================\n\n  return (\n    <div className=\"container\">\n      <Filters\n        platform={platform}\n        setPlatform={setPlatform}\n        genre={genre}\n        setGenre={setGenre}\n        sortBy={sortBy}\n        setSortBy={setSortBy}\n      />\n      <Items currentGames={currentGames} />\n      {data[0]?.title ? (\n        <Pagination\n          currentPage={currentPage}\n          pages={pages}\n          pagesCount={pagesCount}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}