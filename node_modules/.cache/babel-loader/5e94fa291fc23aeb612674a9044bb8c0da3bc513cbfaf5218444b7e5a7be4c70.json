{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  data: [],\n  currentPage: 1,\n  perPage: 12\n};\nconst pagesSlice = createSlice({\n  name: \"pages\",\n  initialState,\n  reducers: {\n    setCurrentPage(state, action) {\n      state.currentPage = action.payload;\n    },\n    setGamesData(state, action) {\n      state.data = action.payload;\n    }\n  }\n});\nexport const {\n  setCurrentPage,\n  setGamesData\n} = pagesSlice.actions;\nexport default pagesSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","data","currentPage","perPage","pagesSlice","name","reducers","setCurrentPage","state","action","payload","setGamesData","actions","reducer"],"sources":["/Users/pavel/Documents/GitHub/test-task-avito/src/redux/slices/pagesSlice.ts"],"sourcesContent":["import { PayloadAction, createSlice } from \"@reduxjs/toolkit\";\nimport { Game, PagesState } from \"../types/types\";\n\nconst initialState: PagesState = {\n  data: [],\n  currentPage: 1,\n  perPage: 12,\n};\n\nconst pagesSlice = createSlice({\n  name: \"pages\",\n  initialState,\n  reducers: {\n    setCurrentPage(state, action: PayloadAction<number>) {\n      state.currentPage = action.payload;\n    },\n    setGamesData(state, action: PayloadAction<Game[]>) {\n      state.data = action.payload;\n    },\n  },\n});\n\nexport const { setCurrentPage, setGamesData } = pagesSlice.actions;\n\nexport default pagesSlice.reducer;\n"],"mappings":"AAAA,SAAwBA,WAAW,QAAQ,kBAAkB;AAG7D,MAAMC,YAAwB,GAAG;EAC/BC,IAAI,EAAE,EAAE;EACRC,WAAW,EAAE,CAAC;EACdC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,UAAU,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAE,OAAO;EACbL,YAAY;EACZM,QAAQ,EAAE;IACRC,cAAcA,CAACC,KAAK,EAAEC,MAA6B,EAAE;MACnDD,KAAK,CAACN,WAAW,GAAGO,MAAM,CAACC,OAAO;IACpC,CAAC;IACDC,YAAYA,CAACH,KAAK,EAAEC,MAA6B,EAAE;MACjDD,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACC,OAAO;IAC7B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,cAAc;EAAEI;AAAa,CAAC,GAAGP,UAAU,CAACQ,OAAO;AAElE,eAAeR,UAAU,CAACS,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}