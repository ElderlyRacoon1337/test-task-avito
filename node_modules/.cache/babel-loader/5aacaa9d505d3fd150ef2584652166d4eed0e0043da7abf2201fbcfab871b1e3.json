{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pavel/Documents/GitHub/test-task-avito/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/pavel/Documents/GitHub/test-task-avito/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{createAsyncThunk,createSlice}from\"@reduxjs/toolkit\";import axios from\"axios\";export var getData=createAsyncThunk(\"games/getGames\",/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(params){var sortBy,platform,genre,_yield$axios$get,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:sortBy=params.sortBy,platform=params.platform,genre=params.genre;_context.next=3;return axios.get(\"https://www.freetogame.com/api/games?platform=\".concat(platform,\"&\").concat(genre&&\"category=\".concat(genre,\"&\"),\"sort-by=\").concat(sortBy));case 3:_yield$axios$get=_context.sent;data=_yield$axios$get.data;return _context.abrupt(\"return\",data);case 6:case\"end\":return _context.stop();}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());export var getOneGame=createAsyncThunk(\"games/getOneGame\",/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(params){var id,_yield$axios$get2,data;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:id=params.id;_context2.next=3;return axios.get(\"https://www.freetogame.com/api/game?id=\".concat(id));case 3:_yield$axios$get2=_context2.sent;data=_yield$axios$get2.data;return _context2.abrupt(\"return\",data);case 6:case\"end\":return _context2.stop();}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}());export var Status=/*#__PURE__*/function(Status){Status[\"LOADING\"]=\"loading\";Status[\"SUCCESS\"]=\"success\";Status[\"ERROR\"]=\"error\";return Status;}({});var initialState={data:[],currentGameData:undefined,loadingStatus:Status.LOADING,gameLoadingStatus:Status.LOADING,platform:\"all\",genre:\"shooter\",sortBy:\"relevance\"};var gamesSlice=createSlice({name:\"games\",initialState:initialState,reducers:{setLoadingStatus:function setLoadingStatus(state,action){state.loadingStatus=action.payload;},setGameLoadingStatus:function setGameLoadingStatus(state,action){state.gameLoadingStatus=action.payload;}},extraReducers:function extraReducers(builder){// getdata\nbuilder.addCase(getData.pending,function(state){state.loadingStatus=Status.LOADING;state.data=[];});builder.addCase(getData.fulfilled,function(state,action){state.loadingStatus=Status.SUCCESS;state.data=action.payload;});builder.addCase(getData.rejected,function(state){state.loadingStatus=Status.ERROR;state.data=[];});// getone\nbuilder.addCase(getOneGame.pending,function(state){state.gameLoadingStatus=Status.LOADING;state.currentGameData=undefined;});builder.addCase(getOneGame.fulfilled,function(state,action){state.gameLoadingStatus=Status.SUCCESS;state.currentGameData=action.payload;});builder.addCase(getOneGame.rejected,function(state){state.gameLoadingStatus=Status.ERROR;state.currentGameData=undefined;});}});var _gamesSlice$actions=gamesSlice.actions,setLoadingStatus=_gamesSlice$actions.setLoadingStatus,setGameLoadingStatus=_gamesSlice$actions.setGameLoadingStatus;export{setLoadingStatus,setGameLoadingStatus};export default gamesSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","getData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","sortBy","platform","genre","_yield$axios$get","data","wrap","_callee$","_context","prev","next","get","concat","sent","abrupt","stop","_x","apply","arguments","getOneGame","_ref2","_callee2","id","_yield$axios$get2","_callee2$","_context2","_x2","Status","initialState","currentGameData","undefined","loadingStatus","LOADING","gameLoadingStatus","gamesSlice","name","reducers","setLoadingStatus","state","action","payload","setGameLoadingStatus","extraReducers","builder","addCase","pending","fulfilled","SUCCESS","rejected","ERROR","_gamesSlice$actions","actions","reducer"],"sources":["/Users/pavel/Documents/GitHub/test-task-avito/src/redux/slices/gamesSlice.ts"],"sourcesContent":["import { PayloadAction, createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\ntype ScreenshotType = { id: number; image: string };\n\nexport interface Game {\n  id: number;\n  title: string;\n  thumbnail: string;\n  short_description: string;\n  description: string;\n  game_url: string;\n  genre: string;\n  platform: string;\n  publisher: string;\n  developer: string;\n  release_date: string;\n  freetogame_profile_url: string;\n  screenshots: ScreenshotType[];\n  minimum_system_requirements: SystemReqsType;\n}\n\ntype SystemReqsType = {\n  os: string;\n  processor: string;\n  memory: string;\n  graphics: string;\n  storage: string;\n};\n\nexport type GenreType =\n  | \"\"\n  | \"mmorpg\"\n  | \"shooter\"\n  | \"strategy\"\n  | \"moba\"\n  | \"racing\"\n  | \"sports\"\n  | \"social\"\n  | \"sandbox\"\n  | \"open-world\"\n  | \"survival\"\n  | \"pvp\"\n  | \"pve\"\n  | \"pixel\"\n  | \"voxel\"\n  | \"zombie\"\n  | \"turn-based\"\n  | \"first-person\"\n  | \"third-Person\"\n  | \"top-down\"\n  | \"tank\"\n  | \"space\"\n  | \"sailing\"\n  | \"side-scroller\"\n  | \"superhero\"\n  | \"permadeath\"\n  | \"card\"\n  | \"battle-royale\"\n  | \"mmo\"\n  | \"mmofps\"\n  | \"mmotps\"\n  | \"3d\"\n  | \"2d\"\n  | \"anime\"\n  | \"fantasy\"\n  | \"sci-fi\"\n  | \"fighting\"\n  | \"action-rpg\"\n  | \"action\"\n  | \"military\"\n  | \"martial-arts\"\n  | \"flight\"\n  | \"low-spec\"\n  | \"tower-defense\"\n  | \"horror\"\n  | \"mmorts\";\n\ninterface GamesParams {\n  platform: \"pc\" | \"browser\" | \"all\";\n  genre: GenreType;\n  sortBy: \"release-date\" | \"popularity\" | \"alphabetical\" | \"relevance\";\n}\n\nexport const getData = createAsyncThunk<Game[], GamesParams>(\n  \"games/getGames\",\n  async (params) => {\n    const { sortBy, platform, genre } = params;\n    const { data } = await axios.get(\n      `https://www.freetogame.com/api/games?platform=${platform}&${\n        genre && `category=${genre}&`\n      }sort-by=${sortBy}`\n    );\n    return data;\n  }\n);\n\ntype GetOneParams = {\n  id: number;\n};\n\nexport const getOneGame = createAsyncThunk<Game[], GetOneParams>(\n  \"games/getOneGame\",\n  async (params) => {\n    const { id } = params;\n    const { data } = await axios.get(\n      `https://www.freetogame.com/api/game?id=${id}`\n    );\n    return data;\n  }\n);\n\ninterface GamesState {\n  data: Game[];\n  currentGameData: Game | undefined;\n  loadingStatus: \"loading\" | \"success\" | \"error\";\n  gameLoadingStatus: \"loading\" | \"success\" | \"error\";\n  platform: \"pc\" | \"browser\" | \"all\";\n  genre: GenreType;\n  sortBy: \"release-date\" | \"popularity\" | \"alphabetical\" | \"relevance\";\n}\n\nexport enum Status {\n  LOADING = \"loading\",\n  SUCCESS = \"success\",\n  ERROR = \"error\",\n}\n\ninterface GamesState {\n  data: Game[];\n  loadingStatus: \"loading\" | \"success\" | \"error\";\n}\n\nconst initialState: GamesState = {\n  data: [],\n  currentGameData: undefined,\n  loadingStatus: Status.LOADING,\n  gameLoadingStatus: Status.LOADING,\n  platform: \"all\",\n  genre: \"shooter\",\n  sortBy: \"relevance\",\n};\n\nconst gamesSlice = createSlice({\n  name: \"games\",\n  initialState,\n  reducers: {\n    setLoadingStatus(state, action: PayloadAction<Status>) {\n      state.loadingStatus = action.payload;\n    },\n    setGameLoadingStatus(state, action: PayloadAction<Status>) {\n      state.gameLoadingStatus = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    // getdata\n    builder.addCase(getData.pending, (state) => {\n      state.loadingStatus = Status.LOADING;\n      state.data = [];\n    });\n    builder.addCase(getData.fulfilled, (state, action) => {\n      state.loadingStatus = Status.SUCCESS;\n      state.data = action.payload;\n    });\n    builder.addCase(getData.rejected, (state) => {\n      state.loadingStatus = Status.ERROR;\n      state.data = [];\n    });\n    // getone\n    builder.addCase(getOneGame.pending, (state) => {\n      state.gameLoadingStatus = Status.LOADING;\n      state.currentGameData = undefined;\n    });\n    builder.addCase(getOneGame.fulfilled, (state, action) => {\n      state.gameLoadingStatus = Status.SUCCESS;\n      state.currentGameData = action.payload as unknown as Game;\n    });\n    builder.addCase(getOneGame.rejected, (state) => {\n      state.gameLoadingStatus = Status.ERROR;\n      state.currentGameData = undefined;\n    });\n  },\n});\n\nexport const { setLoadingStatus, setGameLoadingStatus } = gamesSlice.actions;\n\nexport default gamesSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}