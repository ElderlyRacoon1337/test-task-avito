[{"/Users/pavel/Documents/GitHub/test-task-avito/src/index.tsx":"1","/Users/pavel/Documents/GitHub/test-task-avito/src/App.tsx":"2","/Users/pavel/Documents/GitHub/test-task-avito/src/redux/store.ts":"3","/Users/pavel/Documents/GitHub/test-task-avito/src/theme.ts":"4","/Users/pavel/Documents/GitHub/test-task-avito/src/redux/slices/pagesSlice.ts":"5","/Users/pavel/Documents/GitHub/test-task-avito/src/redux/slices/gamesSlice.ts":"6","/Users/pavel/Documents/GitHub/test-task-avito/src/components/Header/index.tsx":"7","/Users/pavel/Documents/GitHub/test-task-avito/src/pages/MainPage/index.tsx":"8","/Users/pavel/Documents/GitHub/test-task-avito/src/pages/GamePage/index.tsx":"9","/Users/pavel/Documents/GitHub/test-task-avito/src/hooks.ts":"10","/Users/pavel/Documents/GitHub/test-task-avito/src/utils/toEngGenre.ts":"11","/Users/pavel/Documents/GitHub/test-task-avito/src/utils/toEngSortBy.ts":"12","/Users/pavel/Documents/GitHub/test-task-avito/src/utils/createPages.ts":"13","/Users/pavel/Documents/GitHub/test-task-avito/src/utils/toEngPlatform.ts":"14","/Users/pavel/Documents/GitHub/test-task-avito/src/components/Pagination/index.tsx":"15","/Users/pavel/Documents/GitHub/test-task-avito/src/components/FIlters/index.tsx":"16","/Users/pavel/Documents/GitHub/test-task-avito/src/components/Items/index.tsx":"17","/Users/pavel/Documents/GitHub/test-task-avito/src/components/FullGameRight/index.tsx":"18","/Users/pavel/Documents/GitHub/test-task-avito/src/components/FullGameLeft/index.tsx":"19","/Users/pavel/Documents/GitHub/test-task-avito/src/components/Items/item.tsx":"20","/Users/pavel/Documents/GitHub/test-task-avito/src/components/FIlters/Filter.tsx":"21","/Users/pavel/Documents/GitHub/test-task-avito/src/redux/types/types.ts":"22"},{"size":399,"mtime":1693071374369,"results":"23","hashOfConfig":"24"},{"size":800,"mtime":1693130431314,"results":"25","hashOfConfig":"24"},{"size":356,"mtime":1693131539281,"results":"26","hashOfConfig":"24"},{"size":321,"mtime":1693127564855,"results":"27","hashOfConfig":"24"},{"size":600,"mtime":1693129956929,"results":"28","hashOfConfig":"24"},{"size":2414,"mtime":1693129949234,"results":"29","hashOfConfig":"24"},{"size":685,"mtime":1693073773282,"results":"30","hashOfConfig":"24"},{"size":2869,"mtime":1693132002785,"results":"31","hashOfConfig":"24"},{"size":2484,"mtime":1693130003515,"results":"32","hashOfConfig":"24"},{"size":312,"mtime":1693071326276,"results":"33","hashOfConfig":"24"},{"size":2560,"mtime":1693071238988,"results":"34","hashOfConfig":"24"},{"size":370,"mtime":1693071238989,"results":"35","hashOfConfig":"24"},{"size":492,"mtime":1693071238987,"results":"36","hashOfConfig":"24"},{"size":268,"mtime":1693071238989,"results":"37","hashOfConfig":"24"},{"size":2168,"mtime":1693071238927,"results":"38","hashOfConfig":"24"},{"size":1915,"mtime":1693071238914,"results":"39","hashOfConfig":"24"},{"size":1083,"mtime":1693130066307,"results":"40","hashOfConfig":"24"},{"size":4608,"mtime":1693130053106,"results":"41","hashOfConfig":"24"},{"size":2221,"mtime":1693130041527,"results":"42","hashOfConfig":"24"},{"size":1026,"mtime":1693071238925,"results":"43","hashOfConfig":"24"},{"size":3306,"mtime":1693072336180,"results":"44","hashOfConfig":"24"},{"size":1931,"mtime":1693130177855,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"evv1z3",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/pavel/Documents/GitHub/test-task-avito/src/index.tsx",[],[],"/Users/pavel/Documents/GitHub/test-task-avito/src/App.tsx",[],[],"/Users/pavel/Documents/GitHub/test-task-avito/src/redux/store.ts",[],[],"/Users/pavel/Documents/GitHub/test-task-avito/src/theme.ts",[],[],"/Users/pavel/Documents/GitHub/test-task-avito/src/redux/slices/pagesSlice.ts",[],[],"/Users/pavel/Documents/GitHub/test-task-avito/src/redux/slices/gamesSlice.ts",[],[],"/Users/pavel/Documents/GitHub/test-task-avito/src/components/Header/index.tsx",[],[],"/Users/pavel/Documents/GitHub/test-task-avito/src/pages/MainPage/index.tsx",["116","117"],[],"/Users/pavel/Documents/GitHub/test-task-avito/src/pages/GamePage/index.tsx",["118","119","120","121"],[],"/Users/pavel/Documents/GitHub/test-task-avito/src/hooks.ts",[],[],"/Users/pavel/Documents/GitHub/test-task-avito/src/utils/toEngGenre.ts",[],[],"/Users/pavel/Documents/GitHub/test-task-avito/src/utils/toEngSortBy.ts",[],[],"/Users/pavel/Documents/GitHub/test-task-avito/src/utils/createPages.ts",["122","123"],[],"export function createPages(\n  pages: number[],\n  pagesCount: number,\n  currentPage: number\n) {\n  if (pagesCount > 10) {\n    if (currentPage > 5) {\n      for (let i = currentPage - 4; i <= currentPage + 5; i++) {\n        pages.push(i);\n        if (i == pagesCount) break;\n      }\n    } else {\n      for (let i = 1; i <= 10; i++) {\n        pages.push(i);\n        if (i == pagesCount) break;\n      }\n    }\n  } else {\n    for (let i = 1; i <= pagesCount; i++) {\n      pages.push(i);\n    }\n  }\n}\n","/Users/pavel/Documents/GitHub/test-task-avito/src/utils/toEngPlatform.ts",[],[],"/Users/pavel/Documents/GitHub/test-task-avito/src/components/Pagination/index.tsx",["124","125","126"],[],"import { Button, Icon } from \"cutie-ui\";\nimport { useAppDispatch } from \"../../hooks\";\nimport { setCurrentPage } from \"../../redux/slices/pagesSlice\";\nimport styles from \"./Pagination.module.scss\";\n\nexport const Pagination = ({ currentPage, pages, pagesCount }: any) => {\n  const dispatch = useAppDispatch();\n  const onClickNext = () => {\n    dispatch(setCurrentPage(currentPage + 1));\n  };\n  const onClickPrev = () => {\n    dispatch(setCurrentPage(currentPage - 1));\n  };\n\n  return (\n    <div className={styles.pagination}>\n      <Button\n        disabled={currentPage == 1}\n        startIcon={\n          <Icon>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              strokeWidth={1.5}\n              stroke=\"currentColor\"\n              className=\"w-6 h-6\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                d=\"M15.75 19.5L8.25 12l7.5-7.5\"\n              />\n            </svg>\n          </Icon>\n        }\n        className={styles.prevButton}\n        onClick={onClickPrev}\n      >\n        Назад\n      </Button>\n      <div className={styles.pages}>\n        {pages.map((page: number, i: number) => (\n          <span\n            onClick={() => dispatch(setCurrentPage(page))}\n            className={currentPage == page ? styles.active : \"\"}\n            key={i}\n          >\n            {page}\n          </span>\n        ))}\n      </div>\n      <Button\n        disabled={currentPage == pagesCount}\n        endIcon={\n          <Icon>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              strokeWidth={1.5}\n              stroke=\"currentColor\"\n              className=\"w-6 h-6\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                d=\"M8.25 4.5l7.5 7.5-7.5 7.5\"\n              />\n            </svg>\n          </Icon>\n        }\n        className={styles.nextButton}\n        onClick={onClickNext}\n      >\n        Далее\n      </Button>\n    </div>\n  );\n};\n","/Users/pavel/Documents/GitHub/test-task-avito/src/components/FIlters/index.tsx",[],[],"/Users/pavel/Documents/GitHub/test-task-avito/src/components/Items/index.tsx",["127","128","129"],[],"/Users/pavel/Documents/GitHub/test-task-avito/src/components/FullGameRight/index.tsx",["130"],[],"/Users/pavel/Documents/GitHub/test-task-avito/src/components/FullGameLeft/index.tsx",["131"],[],"/Users/pavel/Documents/GitHub/test-task-avito/src/components/Items/item.tsx",["132"],[],"import React from \"react\";\nimport styles from \"./Items.module.scss\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface ItemProps {\n  image: string;\n  title: string;\n  date: string;\n  creator: string;\n  genre: string;\n  id: number;\n}\n\nexport const Item: React.FC<ItemProps> = ({\n  image,\n  title,\n  date,\n  creator,\n  genre,\n  id,\n}) => {\n  const navigate = useNavigate();\n\n  return (\n    <section onClick={() => navigate(\"/\" + id)} className={styles.item}>\n      <img className={styles.image} src={image} alt={`${title} picture`} />\n      <div className={styles.text}>\n        <div className={styles.titleRow}>\n          <h3 className={styles.title}>{title}</h3>\n          <div className={styles.genre}>{genre}</div>\n        </div>\n        <p className={styles.date}>\n          {new Date(date).toLocaleString(\"ru\", {\n            year: \"numeric\",\n            month: \"short\",\n            day: \"numeric\",\n          })}\n        </p>\n        <p className={styles.creator}>{creator}</p>\n      </div>\n    </section>\n  );\n};\n","/Users/pavel/Documents/GitHub/test-task-avito/src/components/FIlters/Filter.tsx",["133","134"],[],"import styles from \"./Filters.module.scss\";\nimport React, { useState } from \"react\";\n\nimport { Button, Icon, Menu, MenuItem } from \"cutie-ui\";\n\ninterface FilterProps {\n  label: string;\n  setValue: React.Dispatch<React.SetStateAction<any>>;\n  menuItems: string[];\n  currentValue: string;\n}\n\nexport const Filter: React.FC<FilterProps> = ({\n  label,\n  setValue,\n  menuItems,\n  currentValue,\n}) => {\n  const [ancorEl, setAnchorEl] = useState<HTMLElement | null>(null);\n  const open = Boolean(ancorEl);\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleClick = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  return (\n    <div className={styles.filter}>\n      <p>{label}</p>\n      <Button\n        onClick={handleClick}\n        endIcon={\n          currentValue == \"Браузерные\" ? (\n            <Icon>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                strokeWidth={1.5}\n                stroke=\"currentColor\"\n                className=\"w-6 h-6\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  d=\"M9 17.25v1.007a3 3 0 01-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0115 18.257V17.25m6-12V15a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 15V5.25m18 0A2.25 2.25 0 0018.75 3H5.25A2.25 2.25 0 003 5.25m18 0V12a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 12V5.25\"\n                />\n              </svg>\n            </Icon>\n          ) : currentValue == \"Windows\" ? (\n            <Icon>\n              <svg\n                fill=\"var(--primary)\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"64\"\n                height=\"64\"\n                shape-rendering=\"geometricPrecision\"\n                text-rendering=\"geometricPrecision\"\n                image-rendering=\"optimizeQuality\"\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                viewBox=\"0 0 640 640\"\n              >\n                <path d=\"M.2 298.669L0 90.615l256.007-34.76v242.814H.201zM298.658 49.654L639.905-.012v298.681H298.657V49.654zM640 341.331l-.071 298.681L298.669 592V341.332h341.33zM255.983 586.543L.189 551.463v-210.18h255.794v245.26z\" />\n              </svg>\n            </Icon>\n          ) : (\n            <Icon>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                strokeWidth={1.5}\n                stroke=\"currentColor\"\n                className=\"w-6 h-6\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  d=\"M19.5 8.25l-7.5 7.5-7.5-7.5\"\n                />\n              </svg>\n            </Icon>\n          )\n        }\n        size=\"large\"\n      >\n        {currentValue}\n      </Button>\n      <Menu\n        className={styles.menu}\n        fullWidth\n        anchorEl={ancorEl as any}\n        onClose={handleClose}\n        open={open}\n      >\n        {menuItems.map((el, i) => (\n          <MenuItem onClose={handleClose} onClick={() => setValue(el)} key={i}>\n            {el}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n","/Users/pavel/Documents/GitHub/test-task-avito/src/redux/types/types.ts",[],[],{"ruleId":"135","severity":1,"message":"136","line":25,"column":6,"nodeType":"137","endLine":25,"endColumn":13,"suggestions":"138"},{"ruleId":"135","severity":1,"message":"139","line":49,"column":6,"nodeType":"137","endLine":49,"endColumn":31,"suggestions":"140"},{"ruleId":"135","severity":1,"message":"141","line":38,"column":6,"nodeType":"137","endLine":38,"endColumn":8,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":42,"column":22,"nodeType":"145","messageId":"146","endLine":42,"endColumn":24},{"ruleId":"143","severity":1,"message":"144","line":44,"column":25,"nodeType":"145","messageId":"146","endLine":44,"endColumn":27},{"ruleId":"143","severity":1,"message":"144","line":76,"column":25,"nodeType":"145","messageId":"146","endLine":76,"endColumn":27},{"ruleId":"143","severity":1,"message":"144","line":10,"column":15,"nodeType":"145","messageId":"146","endLine":10,"endColumn":17},{"ruleId":"143","severity":1,"message":"144","line":15,"column":15,"nodeType":"145","messageId":"146","endLine":15,"endColumn":17},{"ruleId":"143","severity":1,"message":"144","line":18,"column":31,"nodeType":"145","messageId":"146","endLine":18,"endColumn":33},{"ruleId":"143","severity":1,"message":"144","line":46,"column":36,"nodeType":"145","messageId":"146","endLine":46,"endColumn":38},{"ruleId":"143","severity":1,"message":"144","line":54,"column":31,"nodeType":"145","messageId":"146","endLine":54,"endColumn":33},{"ruleId":"143","severity":1,"message":"144","line":16,"column":22,"nodeType":"145","messageId":"146","endLine":16,"endColumn":24},{"ruleId":"143","severity":1,"message":"144","line":18,"column":25,"nodeType":"145","messageId":"146","endLine":18,"endColumn":27},{"ruleId":"143","severity":1,"message":"144","line":20,"column":25,"nodeType":"145","messageId":"146","endLine":20,"endColumn":27},{"ruleId":"147","severity":1,"message":"148","line":22,"column":17,"nodeType":"149","endLine":26,"endColumn":19},{"ruleId":"150","severity":1,"message":"151","line":50,"column":9,"nodeType":"149","endLine":54,"endColumn":11},{"ruleId":"150","severity":1,"message":"151","line":26,"column":7,"nodeType":"149","endLine":26,"endColumn":76},{"ruleId":"143","severity":1,"message":"144","line":34,"column":24,"nodeType":"145","messageId":"146","endLine":34,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":51,"column":28,"nodeType":"145","messageId":"146","endLine":51,"endColumn":30},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'changeTheme'. Either include it or remove the dependency array.","ArrayExpression",["152"],"React Hook useEffect has missing dependencies: 'data' and 'dispatch'. Either include them or remove the dependency array.",["153"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["154"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [changeTheme, theme]",{"range":"161","text":"162"},"Update the dependencies array to be: [platform, genre, sortBy, dispatch, data]",{"range":"163","text":"164"},"Update the dependencies array to be: [dispatch, id]",{"range":"165","text":"166"},[1156,1163],"[changeTheme, theme]",[1799,1824],"[platform, genre, sortBy, dispatch, data]",[1059,1061],"[dispatch, id]"]